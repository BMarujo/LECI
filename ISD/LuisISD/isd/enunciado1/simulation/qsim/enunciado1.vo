// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "01/25/2022 23:22:14"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module enunciado1 (
	Y,
	Q,
	CLK,
	RESET_H);
output 	Y;
output 	[2:0] Q;
input 	CLK;
input 	RESET_H;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~output_o ;
wire \Q[2]~output_o ;
wire \Q[1]~output_o ;
wire \Q[0]~output_o ;
wire \RESET_H~input_o ;
wire \CLK~input_o ;
wire \inst11~0_combout ;
wire \inst2~q ;
wire \inst12~0_combout ;
wire \inst~q ;
wire \inst7~0_combout ;
wire \inst1~q ;
wire \inst19~0_combout ;
wire \inst4~combout ;
wire \inst5~combout ;
wire \inst6~0_combout ;


cycloneive_io_obuf \Y~output (
	.i(\inst19~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Q[2]~output (
	.i(\inst4~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[2]~output .bus_hold = "false";
defparam \Q[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Q[1]~output (
	.i(\inst5~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[1]~output .bus_hold = "false";
defparam \Q[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Q[0]~output (
	.i(\inst6~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[0]~output .bus_hold = "false";
defparam \Q[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \RESET_H~input (
	.i(RESET_H),
	.ibar(gnd),
	.o(\RESET_H~input_o ));
// synopsys translate_off
defparam \RESET_H~input .bus_hold = "false";
defparam \RESET_H~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst11~0 (
// Equation(s):
// \inst11~0_combout  = (\RESET_H~input_o ) # ((!\inst1~q  & !\inst2~q ))

	.dataa(\inst1~q ),
	.datab(\inst2~q ),
	.datac(gnd),
	.datad(\RESET_H~input_o ),
	.cin(gnd),
	.combout(\inst11~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst11~0 .lut_mask = 16'hFF11;
defparam \inst11~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas inst2(
	.clk(\CLK~input_o ),
	.d(\inst11~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst2.is_wysiwyg = "true";
defparam inst2.power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \inst12~0 (
// Equation(s):
// \inst12~0_combout  = (!\RESET_H~input_o  & (!\inst1~q  & (\inst~q  $ (\inst2~q ))))

	.dataa(\inst~q ),
	.datab(\inst2~q ),
	.datac(\RESET_H~input_o ),
	.datad(\inst1~q ),
	.cin(gnd),
	.combout(\inst12~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst12~0 .lut_mask = 16'h0006;
defparam \inst12~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas inst(
	.clk(\CLK~input_o ),
	.d(\inst12~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst.is_wysiwyg = "true";
defparam inst.power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \inst7~0 (
// Equation(s):
// \inst7~0_combout  = (\inst~q  & (\inst2~q  & (!\RESET_H~input_o  & !\inst1~q )))

	.dataa(\inst~q ),
	.datab(\inst2~q ),
	.datac(\RESET_H~input_o ),
	.datad(\inst1~q ),
	.cin(gnd),
	.combout(\inst7~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst7~0 .lut_mask = 16'h0008;
defparam \inst7~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas inst1(
	.clk(\CLK~input_o ),
	.d(\inst7~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst1.is_wysiwyg = "true";
defparam inst1.power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \inst19~0 (
// Equation(s):
// \inst19~0_combout  = (\RESET_H~input_o ) # ((!\inst~q  & ((!\inst2~q ) # (!\inst1~q ))))

	.dataa(\RESET_H~input_o ),
	.datab(\inst1~q ),
	.datac(\inst2~q ),
	.datad(\inst~q ),
	.cin(gnd),
	.combout(\inst19~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst19~0 .lut_mask = 16'hAABF;
defparam \inst19~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb inst4(
// Equation(s):
// \inst4~combout  = (\inst1~q  & !\RESET_H~input_o )

	.dataa(\inst1~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\RESET_H~input_o ),
	.cin(gnd),
	.combout(\inst4~combout ),
	.cout());
// synopsys translate_off
defparam inst4.lut_mask = 16'h00AA;
defparam inst4.sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb inst5(
// Equation(s):
// \inst5~combout  = (\inst~q  & !\RESET_H~input_o )

	.dataa(\inst~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\RESET_H~input_o ),
	.cin(gnd),
	.combout(\inst5~combout ),
	.cout());
// synopsys translate_off
defparam inst5.lut_mask = 16'h00AA;
defparam inst5.sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst6~0 (
// Equation(s):
// \inst6~0_combout  = (\inst2~q  & !\RESET_H~input_o )

	.dataa(\inst2~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\RESET_H~input_o ),
	.cin(gnd),
	.combout(\inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst6~0 .lut_mask = 16'h00AA;
defparam \inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Y = \Y~output_o ;

assign Q[2] = \Q[2]~output_o ;

assign Q[1] = \Q[1]~output_o ;

assign Q[0] = \Q[0]~output_o ;

endmodule
