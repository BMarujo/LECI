// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "12/22/2021 10:17:57"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module teste (
	Y,
	S,
	X0,
	X1,
	X3,
	X4,
	X5,
	X2,
	X7,
	X6);
output 	Y;
input 	[2:0] S;
input 	X0;
input 	X1;
input 	X3;
input 	X4;
input 	X5;
input 	X2;
input 	X7;
input 	X6;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~output_o ;
wire \X5~input_o ;
wire \S[0]~input_o ;
wire \X6~input_o ;
wire \S[1]~input_o ;
wire \X4~input_o ;
wire \inst1|23~0_combout ;
wire \X7~input_o ;
wire \inst1|23~1_combout ;
wire \X2~input_o ;
wire \X1~input_o ;
wire \X0~input_o ;
wire \inst1|23~2_combout ;
wire \X3~input_o ;
wire \inst1|23~3_combout ;
wire \S[2]~input_o ;
wire \inst1|23~4_combout ;


cycloneive_io_obuf \Y~output (
	.i(\inst1|23~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \X5~input (
	.i(X5),
	.ibar(gnd),
	.o(\X5~input_o ));
// synopsys translate_off
defparam \X5~input .bus_hold = "false";
defparam \X5~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \S[0]~input (
	.i(S[0]),
	.ibar(gnd),
	.o(\S[0]~input_o ));
// synopsys translate_off
defparam \S[0]~input .bus_hold = "false";
defparam \S[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \X6~input (
	.i(X6),
	.ibar(gnd),
	.o(\X6~input_o ));
// synopsys translate_off
defparam \X6~input .bus_hold = "false";
defparam \X6~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \S[1]~input (
	.i(S[1]),
	.ibar(gnd),
	.o(\S[1]~input_o ));
// synopsys translate_off
defparam \S[1]~input .bus_hold = "false";
defparam \S[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \X4~input (
	.i(X4),
	.ibar(gnd),
	.o(\X4~input_o ));
// synopsys translate_off
defparam \X4~input .bus_hold = "false";
defparam \X4~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst1|23~0 (
// Equation(s):
// \inst1|23~0_combout  = (\S[0]~input_o  & (((\S[1]~input_o )))) # (!\S[0]~input_o  & ((\S[1]~input_o  & (\X6~input_o )) # (!\S[1]~input_o  & ((\X4~input_o )))))

	.dataa(\S[0]~input_o ),
	.datab(\X6~input_o ),
	.datac(\S[1]~input_o ),
	.datad(\X4~input_o ),
	.cin(gnd),
	.combout(\inst1|23~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|23~0 .lut_mask = 16'hE5E0;
defparam \inst1|23~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \X7~input (
	.i(X7),
	.ibar(gnd),
	.o(\X7~input_o ));
// synopsys translate_off
defparam \X7~input .bus_hold = "false";
defparam \X7~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst1|23~1 (
// Equation(s):
// \inst1|23~1_combout  = (\S[0]~input_o  & ((\inst1|23~0_combout  & ((\X7~input_o ))) # (!\inst1|23~0_combout  & (\X5~input_o )))) # (!\S[0]~input_o  & (((\inst1|23~0_combout ))))

	.dataa(\X5~input_o ),
	.datab(\S[0]~input_o ),
	.datac(\inst1|23~0_combout ),
	.datad(\X7~input_o ),
	.cin(gnd),
	.combout(\inst1|23~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|23~1 .lut_mask = 16'hF838;
defparam \inst1|23~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \X2~input (
	.i(X2),
	.ibar(gnd),
	.o(\X2~input_o ));
// synopsys translate_off
defparam \X2~input .bus_hold = "false";
defparam \X2~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \X1~input (
	.i(X1),
	.ibar(gnd),
	.o(\X1~input_o ));
// synopsys translate_off
defparam \X1~input .bus_hold = "false";
defparam \X1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \X0~input (
	.i(X0),
	.ibar(gnd),
	.o(\X0~input_o ));
// synopsys translate_off
defparam \X0~input .bus_hold = "false";
defparam \X0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst1|23~2 (
// Equation(s):
// \inst1|23~2_combout  = (\S[1]~input_o  & (((\S[0]~input_o )))) # (!\S[1]~input_o  & ((\S[0]~input_o  & (\X1~input_o )) # (!\S[0]~input_o  & ((\X0~input_o )))))

	.dataa(\S[1]~input_o ),
	.datab(\X1~input_o ),
	.datac(\S[0]~input_o ),
	.datad(\X0~input_o ),
	.cin(gnd),
	.combout(\inst1|23~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|23~2 .lut_mask = 16'hE5E0;
defparam \inst1|23~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \X3~input (
	.i(X3),
	.ibar(gnd),
	.o(\X3~input_o ));
// synopsys translate_off
defparam \X3~input .bus_hold = "false";
defparam \X3~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst1|23~3 (
// Equation(s):
// \inst1|23~3_combout  = (\S[1]~input_o  & ((\inst1|23~2_combout  & ((\X3~input_o ))) # (!\inst1|23~2_combout  & (\X2~input_o )))) # (!\S[1]~input_o  & (((\inst1|23~2_combout ))))

	.dataa(\X2~input_o ),
	.datab(\S[1]~input_o ),
	.datac(\inst1|23~2_combout ),
	.datad(\X3~input_o ),
	.cin(gnd),
	.combout(\inst1|23~3_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|23~3 .lut_mask = 16'hF838;
defparam \inst1|23~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \S[2]~input (
	.i(S[2]),
	.ibar(gnd),
	.o(\S[2]~input_o ));
// synopsys translate_off
defparam \S[2]~input .bus_hold = "false";
defparam \S[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst1|23~4 (
// Equation(s):
// \inst1|23~4_combout  = (\S[2]~input_o  & (\inst1|23~1_combout )) # (!\S[2]~input_o  & ((\inst1|23~3_combout )))

	.dataa(\inst1|23~1_combout ),
	.datab(\inst1|23~3_combout ),
	.datac(gnd),
	.datad(\S[2]~input_o ),
	.cin(gnd),
	.combout(\inst1|23~4_combout ),
	.cout());
// synopsys translate_off
defparam \inst1|23~4 .lut_mask = 16'hAACC;
defparam \inst1|23~4 .sum_lutc_input = "datac";
// synopsys translate_on

assign Y = \Y~output_o ;

endmodule
