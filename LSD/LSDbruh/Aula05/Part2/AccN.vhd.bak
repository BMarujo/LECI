library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity AccN is
	generic(N : positive := 4);
	port(dataIn: in std_logic_vector((N-1) downto 0);
			  clk: in std_logic;
		  enable: in std_logic;
		   reset: in std_logic;
		 dataOut: out std_logic_vector((N-1) downto 0));
end AccN;

architecture Behavioral of AccN is
	signal s_regOut,s_adderOut: std_logic_vector((N-1) downto 0));
begin
	s_out <= dataOut;
	entity work.AdderN(Behavioral)
		port map(   dataIn => in0,
						  s_out=> in1,
					s_adderOut=> s);
	entity work.RegN(Behavioral)
		port map(s_adderOut => dataIn,
							 clk => clk,
						 enable => enable,
						  reset => reset,
						dataOut => dataOut)
end Acc;
	